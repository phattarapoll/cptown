// กำหนด ID ของ Google Sheet และ Google Calendar ของคุณ
const SPREADSHEET_ID = '1H52HRx2loIpta5tLpLy7UWHQF2UDbvG-XTQ30mxJFoY'; // **ตรวจสอบว่า ID นี้ถูกต้อง**
const CALENDAR_ID = '0afed3760ac3168dd3e2bdc8d3f9c2fe21abaf0f7128f5cd3b2259bc458f7b2d@group.calendar.google.com'; // **ตรวจสอบว่า ID นี้ถูกต้อง**

function doGet(e) {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const configSheet = ss.getSheetByName('config');
    const bookingSheet = ss.getSheetByName('Booking');

    if (!configSheet || !bookingSheet) {
      throw new Error('Sheets "config" or "Booking" not found.');
    }

    // --- ดึงข้อมูล Config ---
    // ดึงข้อมูลทั้งหมดในครั้งเดียวเพื่อรับประกันว่า array จะมีขนาดเท่ากัน
    const configDataRaw = configSheet.getRange('A9:D').getValues();
    
    // สร้าง array ที่จะใช้ส่งไปหา client
    const unavailableDates = [];
    const holidayNames = [];

    // วน loop เพื่อจัดข้อมูลให้เป็นระเบียบและกรองค่าที่ว่างออก
    configDataRaw.forEach(row => {
      const date = row[0]; // คอลัมน์ A
      const holidayName = row[3]; // คอลัมน์ D

      if (date) {
        unavailableDates.push(Utilities.formatDate(new Date(date), Session.getScriptTimeZone(), 'yyyy-MM-dd'));
        // ตรวจสอบให้แน่ใจว่ามีชื่อวันหยุด
        holidayNames.push(holidayName ? String(holidayName).trim() : '');
      }
    });

    const unavailableWeekdays = configSheet.getRange('B2:B8').getValues().flat().filter(String).map(Number);
    
    // ตั้งค่าช่วงเวลาให้เป็นไปตามที่ลูกค้ากำหนด
    const timeSlots = ["08:30-09:30", "09:30-10:30", "10:30-11:00", "11:00-11:30"];
    
    const config = {
      unavailableDates,
      unavailableWeekdays,
      timeSlots,
      holidayNames
    };

    // --- ดึงข้อมูลการจอง (Bookings) ---
    const bookingRange = bookingSheet.getDataRange();
    const bookingValues = bookingRange.getValues();
    const bookingData = {};

    if (bookingValues.length > 1) {
      const header = bookingValues[0];
      const dateColumnIndex = header.indexOf('BookingDate');
      const timeSlotColumnIndex = header.indexOf('TimeSlot');

      if (dateColumnIndex === -1 || timeSlotColumnIndex === -1) {
        throw new Error('Booking sheet is missing "BookingDate" or "TimeSlot" header.');
      }

      for (let i = 1; i < bookingValues.length; i++) {
        const row = bookingValues[i];
        const dateRaw = row[dateColumnIndex];
        const timeSlot = row[timeSlotColumnIndex];

        if (dateRaw && timeSlot) {
          const date = Utilities.formatDate(new Date(dateRaw), Session.getScriptTimeZone(), 'yyyy-MM-dd');
          if (!bookingData[date]) {
            bookingData[date] = {};
          }
          if (!bookingData[date][timeSlot]) {
            bookingData[date][timeSlot] = 0;
          }
          bookingData[date][timeSlot]++;
        }
      }
    }

    return ContentService.createTextOutput(JSON.stringify({ config, bookings: bookingData }))
      .setMimeType(ContentService.MimeType.JSON);

  } catch (error) {
    console.error(`Error in doGet: ${error.message}`);
    return ContentService.createTextOutput(JSON.stringify({ error: error.message }))
      .setMimeType(ContentService.MimeType.JSON);
  }
}

function doPost(e) {
  try {
    const ss = SpreadsheetApp.openById(SPREADSHEET_ID);
    const bookingSheet = ss.getSheetByName('Booking');
    const calendar = CalendarApp.getCalendarById(CALENDAR_ID);

    if (!bookingSheet) {
      throw new Error('Sheet "Booking" not found.');
    }
    if (!calendar) {
      throw new Error('Calendar not found.');
    }

    const { fullName, telNumber, bookingDate, timeSlot, bookingReason } = e.parameter;

    if (!fullName || !telNumber || !bookingDate || !timeSlot || !bookingReason) {
      throw new Error('Missing required booking data.');
    }

    // แปลง bookingDate จาก string เป็น Date object
    const dateParts = bookingDate.split('-');
    const dateObject = new Date(Number(dateParts[0]), Number(dateParts[1]) - 1, Number(dateParts[2]));

    // แปลง timeSlot เป็นเวลาเริ่ม-สิ้นสุด
    const [startStr, endStr] = timeSlot.split(' - ')[0].split(':').map(Number);
    const [startHour, startMinute] = startStr.split(' ')[0].split(':').map(Number);
    const [endHour, endMinute] = endStr.split(' ')[0].split(':').map(Number);

    const startDateTime = new Date(dateObject);
    startDateTime.setHours(startHour, startMinute, 0);

    const endDateTime = new Date(dateObject);
    endDateTime.setHours(endHour, endMinute, 0);

    // ✨ บันทึกลง Google Sheet
    bookingSheet.appendRow([
      new Date(),       // A: Timestamp
      fullName,         // B: ชื่อ
      telNumber,        // C: เบอร์
      dateObject,       // D: วันที่จอง
      timeSlot,         // E: ช่วงเวลา
      bookingReason     // F: อาการ
    ]);

    // ✨ บันทึกลง Google Calendar
    calendar.createEvent(
      `${fullName} (${bookingReason})`, // หัวเรื่อง
      startDateTime,
      endDateTime,
      {
        description: `เบอร์โทร: ${telNumber}`,
        guests: `mailto:${fullName}@example.com`,
        sendInvites: false,
        location: 'สถานพยาบาล',
        // ตั้งค่าให้ Event เป็นสีที่ต้องการ
        colorId: CalendarApp.EventColor.PALE_GREEN,
      }
    );

    return ContentService.createTextOutput('Booking successful!');

  } catch (error) {
    console.error(`Error in doPost: ${error.message}`);
    return ContentService.createTextOutput('Error: ' + error.message);
  }
}